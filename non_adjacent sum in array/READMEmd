# 🔢 Non-Adjacent Maximum Sum in Java

This Java program calculates the **maximum sum of non-adjacent elements** from a given integer array. It follows a greedy approach by summing alternating elements in two different passes and selecting the higher total.

sum1 calculates even number of indices;
---

## 📋 Problem Statement

Given an array of integers, find the **maximum possible sum** of elements such that **no two chosen elements are adjacent** in the array.

---

## 🧪 Example

### Input:
a = {2, 3, 5, 7, 8, 6, 7}

### Output:

### Explanation:
- Sum of elements at even indices (0, 2, 4, 6): `2 + 5 + 8 + 7 = 22`
- Sum of elements at odd indices (1, 3, 5): `3 + 7 + 6 = 16`
- Max of the two = `22`

---

## 🧠 Approach

1. Initialize two sums: `sum1` for even-indexed elements, `sum2` for odd-indexed elements.
2. Loop through the array, summing non-adjacent elements in both patterns.
3. If the array length is odd, add the last element to `sum1`.
4. Print the **maximum of the two sums**.

---

## 🛠️ How to Run

### Prerequisites
- Java JDK installed
- Any Java IDE or terminal access

### Compile and Run
```bash
javac non_adjacent_sum.java
java placement.non_adjacent_sum
```